<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>이미지 업로드 클라이언트</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
    <style>
        .custom-file-container { position: relative; width: 500px; height: 300px; border: solid 1px #ccc; border-radius: 15px; display: flex; align-items: center; justify-content: center; }
        .custom-file-container.drag-over { background-color: #f0f0f0; }
        .custom-file-container:hover { background-color: #f0f0f0; }
        .title { display: flex; align-items: center; justify-content: center; position: absolute; z-index: 9; }
        .custom-file-input { width: 100%; height: 100%; opacity: 0; position: absolute; z-index: 10; cursor: pointer; }
    </style>
</head>
<body>
    <div class="container mt-5">
        <h2 class="mb-4">Image Upload Form</h2>
        <div style="display: flex; align-items: center;">
            <form action="/images" method="POST" enctype="multipart/form-data" style="margin-right: 20px;">
                <div id="dropArea" class="mb-3 custom-file-container" ondragenter="handleDragEnter(event)" ondragleave="handleDragLeave(event)" ondrop="handleDrop(event)" ondragover="handleDragOver(event)">
                    <label for="imageTest" id="title" class="custom-file-label">Select an image:</label>
                    <input type="file" class="form-control custom-file-input" id="imageTest" name="imageTest">
                </div>
                <button type="button" class="btn btn-primary" onclick="uploadImage()">Submit</button>
            </form>
            <div id="imageContainer"></div>
        </div>
        <div style="margin-top: 40px;">
            <h2>이미지 리스트</h2>
            <hr />
            <ul id="imageList"></ul>
        </div>
    </div>

<script>
    const imageContainer = document.getElementById('imageContainer');
    const input = document.getElementById('imageTest');
    const imageList = document.getElementById('imageList');
    const title = document.getElementById('title');
    input.addEventListener('change', (e) => {
    
        title.innerText = e.target.files[0].name;
        const file = e.target.files[0];
        const reader = new FileReader();
        reader.onload = () => {
            const img = new Image();
            img.src = reader.result;
            img.style.width = '200px';
            img.style.height = '200px';
            img.onload = () => {
                imageContainer.innerHTML = '';
                imageContainer.appendChild(img);
            };
        };
        reader.readAsDataURL(file);
    });

    const handleDragEnter = (e) => {
        e.preventDefault();
        const dropArea = e.target.closest('.custom-file-container');
        dropArea.classList.add('drag-over');
    };

    const handleDragLeave = (e) => {
        e.preventDefault();
        const dropArea = e.target.closest('.custom-file-container');
        dropArea.classList.remove('drag-over');
    };

    const handleDrop = (e) => {
        const dropArea = event.target.closest('.custom-file-container');
        dropArea.classList.remove('drag-over');
    };

    const getImageList = async () => {
        try {
            const response = await fetch('/images');
            const data = await response.json();
            if (response.ok) {
                for (let i = 0; i < data.images.length; i++) {
                    const img = new Image();
                    img.src = "/public/images/" + data.images[i].name;
                    img.style.width = '300px';
                    img.style.height = '300px';
                    img.style.marginRight = '10px';
                    img.style.marginBottom = '10px';
                    imageList.appendChild(img);
                }
            }
        } catch (error) {
            console.error('Error:', error);
            alert('이미지 리스트를 불러오는데 실패했습니다.');
        }
    };


    const uploadImage = async () => {
        try {
            const formData = new FormData();
            formData.append("imageTest", input.files[0]);

            const response = await fetch('/images', {
                method: 'POST',
                body: formData,
            });
            const data = await response.json();
            if (response.ok) {
                const img = new Image();
                img.src = "/public/images/" + data.file.filename;
                img.style.width = '200px';
                img.style.height = '200px';
                img.style.marginRight = '10px';
                img.style.marginBottom = '10px';
                imageList.prepend(img);
            }

            input.value = '';
            imageContainer.innerHTML = '';
            title.innerText = 'Select an image:';

        } catch (error) {
            console.error('Error:', error);
            alert('이미지 업로드에 실패했습니다.');
        }
    }
    getImageList();
</script>
</body>
</html>